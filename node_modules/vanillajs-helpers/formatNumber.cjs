"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const limitDecimals_1 = __importDefault(require("./limitDecimals"));
const defaultSettings = {
    decimals: 2,
    thousand: '.',
    decimal: ','
};
/**
 * Formats a number with defined thousand and decimal separator, and a decimal limit
 * (see `limitDecimals` for details on `decCount`)
 *
 * @example
 * ```ts
 * // Default format
 * formatNumber(123456); // -> 123.456,00
 *
 * // Custom format
 * formatNumber(123456, { decimals: '>3', thousand: '-', decimal: ':' }); // -> 123-456:000
 * ```
 *
 * @param num - Number to format
 * @param settings - Settings for the number formatting
 * @return Formatted number as a string
 */
function formatNumber(num, settings) {
    const { decimals, thousand, decimal } = Object.assign(Object.assign({}, defaultSettings), settings);
    // Format the number to the desired number of decimals and split.
    const parts = (0, limitDecimals_1.default)(num, decimals).split('.');
    // Insert separator
    parts[0] = parts[0].replace(/(\d)(?=(\d{3})+$)/g, `$1${thousand}`);
    // Join with decimal delimiter
    return parts.join(decimal);
}
exports.default = formatNumber;
