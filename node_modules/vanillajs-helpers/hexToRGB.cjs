"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const isString_1 = __importDefault(require("./isString"));
const chunkString_1 = __importDefault(require("./chunkString"));
const hexToNumber_1 = __importDefault(require("./hexToNumber"));
/**
 * Converts a Hexadecimal color to a RGB(A) color array
 *
 * @example
 * ```ts
 * hexToRGB('#2fd466'); // -> [47, 212, 102]
 *
 * // And with alpha channel
 * hexToRGB('#2fd46680'); // -> [47, 212, 102, 0.5]
 * ```
 *
 * @param hex - Hex color to convert to RGB
 * @return - Array with RGB values
 */
function hexToRGB(hex) {
    if (!(0, isString_1.default)(hex) || !hex) {
        return [0, 0, 0];
    }
    if (hex[0] === '#') {
        hex = hex.substr(1);
    }
    const rgb = (0, chunkString_1.default)(hex, hex.length <= 4 ? 1 : 2)
        .map((c) => (0, hexToNumber_1.default)(c.length > 1 ? c : `${c}${c}`));
    if (rgb.length > 3) {
        rgb[3] = parseFloat((rgb[3] / 255).toFixed(2));
    }
    return rgb;
}
exports.default = hexToRGB;
