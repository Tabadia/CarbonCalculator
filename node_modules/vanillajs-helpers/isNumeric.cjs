"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const isNumber_1 = __importDefault(require("./isNumber"));
const isString_1 = __importDefault(require("./isString"));
/**
 * Is the given argument is a finite numeric value (number as string or number directly) or not.
 *
 * @example
 * ```ts
 * isNumber(123); // -> true
 * isNumber('123'); // -> true
 * isNumber(Infinity); // -> false
 * ```
 *
 * @param x - Argument to test
 * @return - Whether the given argument is a numeric value
 */
function isNumeric(x) {
    if ((0, isString_1.default)(x)) {
        if (!x.length) {
            return false;
        }
        x = Number(x);
    }
    return (0, isNumber_1.default)(x) && !Number.isNaN(x);
}
exports.default = isNumeric;
