"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const objectType_1 = __importDefault(require("./objectType"));
/**
 * Is the given argument of type String
 *
 * @example
 * ```ts
 * class Obj {}
 *
 * isObject({}); // -> true
 * isObject(new Obj()); // -> true
 * isObject('123'); // -> false
 * ```
 *
 * @param x - Argument to test
 * @return - Whether the argument a plain object or not
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isObject(x) {
    return (0, objectType_1.default)(x) === 'object' && Object(x) === x;
}
exports.default = isObject;
