"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var defaultSettings = { numbers: false };
/**
 * Transform a string into a space separated phrase
 *
 * @example
 * ```ts
 * phrasify('XMLDataInput'); // -> XML data input
 * phrasify('dataVALUE2-input', { numbers: true }); // -> data VALUE 2 input
 * ```
 *
 * @param input - The string to transform
 * @param settings - The settings for the transform
 * @return - The transformed phrase or word
 */
function phrasify(input, settings) {
    if (!input) {
        return '';
    }
    settings = __assign(__assign({}, defaultSettings), settings);
    // Create space before uppercase letters (if it is an abbrivaition
    // - more than 1 letter - create space after as well)
    input = "".concat(input).replace(/([A-Z])([a-z])/g, function (m) { return " ".concat(m); });
    if (settings.numbers) {
        input = input.replace(/(\d+)/g, ' $1 ');
    }
    // Convert any non letter/number characters into a single space
    // and remove trailing spaces
    return input.replace(/[^a-z\d]+/gi, ' ').trim();
}
exports.default = phrasify;
