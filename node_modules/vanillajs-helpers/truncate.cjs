"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const isNumber_1 = __importDefault(require("./isNumber"));
/**
 * Limits a string to a given number of characters and adds '...' in the end
 *
 * @example
 * ```ts
 * truncate('No max length to the string'); // -> No max limit to the string length
 * truncate('With a max length to the string', { maxLength: 10 }); // -> With a max...
 * truncate('With a max length to the string and a differnet ending', { maxLength: 10, end: ' <---' }); // -> With a max <---
 * ```
 *
 * @param str - String to truncate
 * @param settings - Settings to use with the truncation
 * @return - The truncated string
 */
function truncate(str, settings = {}) {
    const { maxLength, end = '...' } = settings;
    if (!(0, isNumber_1.default)(maxLength)
        || maxLength < 0
        || str.length <= maxLength) {
        return str;
    }
    return `${str.substr(0, maxLength)}${end}`;
}
exports.default = truncate;
